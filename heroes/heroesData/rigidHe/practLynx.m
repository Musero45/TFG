function he = practLynx(atmosphere)

% FIXME Growing structure. Some definitions will be added. To be documented

% Helicopter definition
label = 'practLynx';

% main rotor definition
mainRotor = struct(...
            'class','rigidRotor',...
            'id',label,...
            'active','yes',...
            'R',6.4,...% 
            'e',0.52,...%
            'b',4,...%
            'theta1',-0.14,...
            'cldata',[6 0],...% Padfield [6.113 0]
            'cddata',[0.015 0 0],... [0.29395 0.00961 0.0049],... %Padfield [38.66? ? .0074]
            'profile',@cl1cd2,...
            'Omega',35.63,... % 
            'c0',0.391,... %
            'c1',0,... % 
            'IBeta',678.14,...%
            'ITheta',15,...%
            'IZeta',693.14,...% IBeta+ITheta 100000,...% My own
            'xGB',2.51,...% 
            'bm',60.3,...%
            'kBeta',166352,... %
            'k',0 ...
            );

%%% Non corresponding values from now on to. Not used by this moment, but
%%% necce but neccesary to properly performance. Will be update when needed.

% tail rotor definition
tailRotor = struct(...
            'class','rigidRotor',...
            'id',label,...
            'active','yes',...
            'R',1.106,...%
            'b',4,...% 
            'e',0.,...%
            'theta1',0,...
            'cldata',[5.7 0],...% Padfield | old one [5.8109 0]
            'cddata',[0.01 0.0 0.0],...% [0.29395 0.00961 0.00492]
            'profile',@cl1cd2,...
            'Omega',206,... % 
            'c0',0.18, ... %
            'c1',0, ... %
            'kBeta',1e100,... % rigid
            'k',1 ...
            );

tailRotor = massBlade_mr2inertiaBlade_tr(mainRotor,tailRotor);

% fuselage definition
fuselage = struct(...
            'class','fuselage',...
            'id',label,...
            'active','no',...
            'model',@generalFus,...
            'lf',8.56,...
            'Sp',10,...
            'Ss',12,...
            'kf',1 ...
            );
        
% vertical fin definition
verticalFin = struct(...
            'class','stabilizer',...
            'id',label,...
            'active','no',...
            'airfoil',@naca0012,...
            'type',@get2DStabilizerActions,...
            'c',.3,...
            'S',.805,...
            'theta',0.08116,...
            'ks',1 ...
            );
        
% horizontal tail definition
%left
leftHTP = struct(...
            'class','stabilizer',...
            'id',label,...
            'active','no',...
            'airfoil',@naca0012,...
            'type',@get2DStabilizerActions,...
            'c',.3,...
            'S',.4015,...
            'theta',0.0698,...
            'ks',1 ...
            );

%right
rightHTP = struct(...
            'class','stabilizer',...
            'id',label,...
            'active','no',...
            'airfoil',@naca0012,...
            'type',@get2DStabilizerActions,...
            'c',.3,...
            'S',.4015,...
            'theta',0.0698,...
            'ks',1 ...
            );
        
% transmission        
  

transmission = struct(...%ADDED BY ALVARO
                'transmissionType',@standardTransmission,...%ADDED BY ALVARO
                'etaTmr',0.12,...%ADDED BY ALVARO
                'etaTtr',0.07 ...%ADDED BY ALVARO
             );%ADDED BY ALVARO
        
% grometry definition

geometry = struct(...
            'class','geometry',...
            'id',label,...
            'xcg',-0.126,...
            'ycg',0,...
            'zcg',0,...
            'epsilonx',0,...
            'epsilony',-2*pi/180,...
            'ls',0,...
            'ds',0,...
            'h',1.274,...
            'thetatr',0,...
            'ltr',-7.66,...
            'dtr',0.0,...
            'htr',-1.146,...
            'lvf',-5.416,...
            'dvf',0,...
            'hvf',-2.04,...
            'Gammavf',pi/2,...
            'llHTP',-4.56,...
            'dlHTP',-.969,...
            'hlHTP',0,...
            'GammalHTP',0,...
            'lrHTP',-4.56,...
            'drHTP',.969,...
            'hrHTP',0,...
            'GammarHTP',0 ...
            );

inertia = struct(...
          'class','inertia',...
          'id',label,...
          'W',4314.7*9.8,...
          'Ix',2767.1,...%ADDED BY ALVARO/OSCAR
          'Iy',13904.5,...%ADDED BY ALVARO/OSCAR
          'Iz',12208.8,...%ADDED BY ALVARO/OSCAR
          'Ixy',0,...%ADDED BY ALVARO/OSCAR
          'Ixz',2034.8,...%ADDED BY ALVARO/OSCAR
          'Iyz',0 ...%ADDED BY ALVARO/OSCAR
          );
        
% helicopter definition
he  = struct(...
      'class','rigidHe', ...
      'id',label,...
      'mainRotor',mainRotor,...
      'tailRotor',tailRotor,...
      'fuselage',fuselage,...
      'verticalFin',verticalFin,...
      'leftHTP',leftHTP,...
      'rightHTP',rightHTP,...
      'transmission',transmission,...%ADDED BY ALVARO
      'geometry',geometry,...
      'inertia',inertia ...
);



% atmosphere seems not very clear that it is convenient to be input FIXME
he      = addCharacteristic2he(he,atmosphere);

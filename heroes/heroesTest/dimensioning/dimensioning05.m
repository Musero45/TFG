function io = dimensioning05(mode)
% This test computes dimensional helicopter from a statistical helicopter
% This statistical helicopter is obtained from requirement of 
% design of a like-Bo105 and it is transformed to a dimensional helicopter
% ready to produce trim states. 
%

% Get atmosphere
atm        = getISA;

% Get design requirements
dr        = cesarDR;

% Select engine and number of engines
numEngines = 2;
engine     = Allison250C28C(atm,numEngines);

% Transform design requirements and engine data to statistical helicopter
stathe     = desreq2stathe(dr,engine);


% vertical fin surface
Svt = .805;

% horizontal tail plane chord
cHTP = .4;


% Define the option structures to define the properly the data for 
% Bo105 that it is required for 
optMR   = struct(...
          'e',0.0,...
          'theta1',-8*pi/180,...
          'cldata',[6.113 0],...
          'cddata',[0.0074 0.00961 0.29395],...
          'kBeta', 113330 ...
);

optTR   = struct(...
          'e',0.0,...
          'theta1',0,...
          'cldata',[5.7 0],...
          'cddata',[0.008 0.00961 0.29395],...
          'kBeta', 1e100 ...
);

optVF = struct(...
          'airfoil',@naca0012,...
          'theta',4.6501*pi/180 ...
);

optLHTP = struct(...
          'airfoil',@naca0012,...
          'theta',4.*pi/180 ...
);

optRHTP = struct(...
          'airfoil',@naca0012,...
          'theta',4.*pi/180 ...
);

optGeom = struct(...
          'xcg',0.08033,...
          'epsilony',-3*pi/180, ...
          'dtr',-0.3 ...
);


optStatHe = struct(...
      'mainRotor',optMR,...
      'tailRotor',optTR,...
      'verticalFin',optVF,...
      'leftHTP',optLHTP,...
      'rightHTP',optRHTP,...
      'geometry',optGeom ...
);


hedim = stathe2rigidhe(stathe,atm,cHTP,Svt,optStatHe);

io = 1;


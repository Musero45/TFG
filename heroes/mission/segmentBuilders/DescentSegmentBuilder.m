function DescendPlan = DescentSegmentBuilder(pos,DH,V,gammaT,DPL,Omega)
% DescendSegmentBuilder. builds the mission segment corresponding to a
% descent for given altitude variation, DH, flight velocity, V, and descent 
% angle, gammaT.   
%
% DH     [1x1 double] is the altitude increment during the flight segment [m]
% V      [1x1 double] is the segment flight velocity [m/s]
% gammaT [1x1 double] is the descent angle [rad]
% DPL    [1x1 double] is the segment payload variation [N]
% Omega  [1x1 double] is the main rotor angular velocity [rad/s]
%
%
% The DescendPlan is a structure with the following fields:
%
%     class: 'missionSegment'
%        id: 'Descend'
%    solver: @getSegmentDescent
%       pos: [1x1 double]
%         V: [1x2 double]
%    gammaT: [1x2 double]
%        VH: [1x2 double]
%        VV: [1x2 double]
%     Omega: [1x2 double]
%         Z: [1x2 double]
%         H: [1x2 double]
%        DH: [1x1 double]
%         R: [1x2 double]
%        DR: [1x1 double]
%         T: [1x2 double]
%        DT: [1x1 double]
%        GW: [1x2 double]
%       DGW: [1x1 double]
%        Mf: [1x2 double]
%       DMf: [1x1 double]
%        PL: [1x2 double]
%       DPL: [1x1 double]
%         P: [1x2 double]
%


DescendPlan = struct(...
    'class','missionSegment',...
       'id','Descend',...
   'solver',@getSegmentDescent,...
      'pos',pos,...
        'V',[V V],...
   'gammaT',[gammaT gammaT],...
       'VH',[NaN NaN],...
       'VV',[NaN NaN],...
    'Omega',[Omega Omega],...
        'Z',[NaN NaN],...
        'H',[NaN NaN],...
       'DH',DH,...
        'R',[NaN NaN],...
       'DR',NaN,...
        'T',[NaN NaN],...
       'DT',NaN,...
       'GW',[NaN NaN],...
      'DGW',NaN,...
       'Mf',[NaN NaN],...
      'DMf',NaN,...
       'PL',[NaN NaN],...
      'DPL',DPL,...
        'P',[NaN NaN]...
          );
    
end



function stathe = rigidHe2stathe(rigidHe)
%RIGIDHE2STATHE Transforms a rigid helicopter into a statistic helicopter
%   Detailed explanation goes here




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Main Rotor
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
R = rigidHe.mainRotor.R;
c = rigidHe.mainRotor.c0;
b = rigidHe.mainRotor.b;
OmegaRAD = rigidHe.mainRotor.Omega;

OmegaRPM = 60/(2*pi)*OmegaRAD;
D = 2*R;
Vt = OmegaRAD*R;
sigma=(b*c)/(pi*(D/2));

mr = struct(...
    'D',D,  ...
    'R',R, ...
    'c',c,  ...
    'Vt',Vt, ...
    'OmegaRPM',OmegaRPM, ...
    'OmegaRAD',OmegaRAD,...
    'b',b,...
    'sigma',sigma ...
);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Tail Rotor
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Rtr = rigidHe.tailRotor.R;
ctr = rigidHe.tailRotor.c0;
btr = rigidHe.tailRotor.b;
OmegatrRAD = rigidHe.tailRotor.Omega;

OmegatrRPM = 60/(2*pi)*OmegatrRAD;
Dtr = 2*Rtr;
Vttr = OmegatrRAD*Rtr;
sigmatr=(btr*ctr)/(pi*(Dtr/2));

tr=struct(...
     'D',Dtr,...
     'R',Rtr,...
     'c',ctr,...
     'Vt',Vttr,...
     'OmegaRPM',OmegatrRPM,...
     'OmegaRAD',OmegatrRAD,...
     'b',btr,...
     'sigma',sigmatr ...
);
    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%      
% Dimensions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Fl = rigidHe.fuselage.lf;
Sht = 2*rigidHe.leftHTP.S;
aht = rigidHe.geometry.llHTP;
amt = -rigidHe.geometry.ltr;
avt = -rigidHe.geometry.lvf;

Fh = rigidHe.fuselage.Ss/Fl;
Fw = rigidHe.fuselage.Sp/Fl;
%Lrt = ;
%cvt = ;

dim = struct(...
    'horizontalTailSurfaceArm', aht,...
    'Sht', Sht,...
    'tailRotorArm', amt,...
    'verticalTailSurfaceArm', avt,...
    'fuselageLength', Fl,...
    'heightRotorHead', Fh,...
    'widthOverLandingGear', Fw...  
);
    %'airframeOverallLength', Lrt,...
    %'cvt',cvt, ...


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Performances
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
pfs = rigidHe.dimensioningPerformances;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Weights
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
We = rigidHe.inertia.OEW;
usefulLoad = rigidHe.inertia.usefulLoad;
Wf = rigidHe.inertia.MFW;
MTOW = rigidHe.inertia.MTOW;
Wcrew = rigidHe.inertia.Wcrew;
Wpl = rigidHe.inertia.MPL;
Vfm3 = rigidHe.inertia.Vf;
Dl = rigidHe.inertia.DL;


wgt = struct (...
    'emptyWeight', We,...
    'usefulLoad', usefulLoad, ...
    'fuelValue', Wf,...
    'MTOW',MTOW,...
    'Wcrew',Wcrew,...
    'Wpl',Wpl,...
    'Vf',Vfm3,...
    'discLoading', Dl ...
);

% Fuel flow
wgt.fuelFlow = rigidHe.engine.PSFC*pfs.TakeOffTotalPower;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inertia data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Ix = rigidHe.inertia.Ix;
Iy = rigidHe.inertia.Iy;
Iz = rigidHe.inertia.Iz;
Ixy = rigidHe.inertia.Ixy;
Ixz = rigidHe.inertia.Ixz;
Iyz = rigidHe.inertia.Iyz;

im = struct(...
          'Ix',Ix,...
          'Iy',Iy,...
          'Iz',Iz,...
          'Ixy',Ixy,...
          'Ixz',Ixz,...
          'Iyz',Iyz ...
          );

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% AFDD data calculations
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%afdd = AFDD(rigidHe.DR,mr,tr,dim,pfs,wgt,rigidHe.engine);



% Stat helicopter
stathe = struct(...
        'class','stathe',...
        'id',rigidHe.id,...
        'MainRotor', mr,...
        'TailRotor', tr,...
        'Dimensions', dim,...
        'Performances', pfs,...
        'Weights', wgt,...
        'inertiaMoments',im,...
        'energyEstimations',rigidHe.DR.energyEstimations,...
        'Engine',rigidHe.engine,...
        'DR',rigidHe.DR...
);


end

